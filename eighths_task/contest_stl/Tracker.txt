#include <iostream>
#include <string>
#include <map>
#include <vector>
#include <algorithm>
using namespace std;
class Tracker
{
    multimap<string, unsigned long long> people;
public:
    // При любом действии пользователя вызывается этот метод.
    // Методу передаётся:
    // - какой пользователь совершил действие (username);
    // - когда (timestamp - для простоты условные секунды от начала времён).
    // Внимание: не гарантируется, что timestamp расположены строго по
    // возрастанию, в них может быть любой бардак.
    void click(const string& username, unsigned long long timestamp){
        people.insert(make_pair(username, timestamp));

    }

    // По имени пользователя нужно вернуть, сколько всего было кликов
    unsigned long long getClickCount(const string& username) const{
        return people.count(username);
    }

    // Когда был первый клик
    unsigned long long getFirstClick(const string& username) {
        vector<unsigned long long>a;
        for(const auto & it : people){
            if(it.first == username){
                a.push_back(it.second);
            }
        }
        unsigned long long max = 100000;
        for(unsigned long long i : a){
            if(i <= max){
                max = i;
            }
        }
        return max;
    }


    // Когда был последний клик
    unsigned long long getLastClick(const string& username) const{
        vector<unsigned long long>b;
        for(const auto & it : people){
            if(it.first == username){
                b.push_back(it.second);
            }
        }
        unsigned long long max = 0;
        for(unsigned long long i : b){
            if(i >= max){
                max = i;
            }
        }
        return max;
    }
};


int main() {
    Tracker t;
    t.click("alice", 1000);
    t.click("bob", 1100);
    t.click("alice", 1001);
    t.click("alice", 1200);
    t.click("alice", 1002);
    cout << t.getClickCount("alice") << endl;
    cout << t.getClickCount("bob") << endl;
    cout << t.getFirstClick("alice") << endl;
    cout << t.getFirstClick("bob") << endl;
    cout << t.getLastClick("alice") << endl;
    cout << t.getLastClick("bob") << endl;
    return 0;
}