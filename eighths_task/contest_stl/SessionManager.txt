#include <iostream>
#include <map>
#include <string>
#include <vector>
#include<algorithm>
using namespace std;
class SessionManager
{
    map<string, int> users;
public:
    // Вход пользователя.
    // Один пользователь может войти несколько раз подряд,
    // считать его при этом нужно один раз.
    void login(const std::string& username){
        users.insert(make_pair(username, 1));
    }

    // Выход пользователя.
    // Пользователь может выйти несколько раз подряд,
    // падать при этом не нужно.
    void logout(const string& username){
        auto it = users.find(username);
        it->second = 0;
    }

    // Сколько сейчас пользователей залогинено.
    int getNumberOfActiveUsers() {
        int sum = 0;
        for(const auto & it : users){
            sum += it.second;
        }
        return sum;
    }
};

int main() {
    SessionManager m;
    m.login("alice");
    cout << m.getNumberOfActiveUsers() << endl;
    m.login("bob");
    cout << m.getNumberOfActiveUsers() << endl;
    m.login("alice");
    cout << m.getNumberOfActiveUsers() << endl;
    m.logout("whoever");
    cout << m.getNumberOfActiveUsers() << endl;
    m.logout("alice");
    cout << m.getNumberOfActiveUsers() << endl;
    m.logout("bob");
    cout << m.getNumberOfActiveUsers() << endl;
    return 0;
}